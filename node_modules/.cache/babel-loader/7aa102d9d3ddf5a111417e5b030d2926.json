{"ast":null,"code":"var _jsxFileName = \"/home/simin/Projcts/react-lessons/app-timer/src/components/timerCounter.js\";\nimport React, { Component } from \"react\";\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timer: 0,\n      backward: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      timer,\n      backward\n    } = this.state;\n    let next;\n    this.interval = setInterval(function () {\n      if (backward) {\n        next = timer - 1;\n      } else {\n        next = timer + 1;\n      }\n\n      this.setState({\n        timer: next\n      });\n    }, 1000);\n  }\n\n  onPressEnter(value) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.timer);\n  }\n\n}","map":{"version":3,"sources":["/home/simin/Projcts/react-lessons/app-timer/src/components/timerCounter.js"],"names":["React","Component","Timer","state","timer","backward","componentDidMount","next","interval","setInterval","setState","onPressEnter","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADiC;AAAA;;AAKzCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,QAAII,IAAJ;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAY;AACpC,UAAIJ,QAAJ,EAAc;AACVE,QAAAA,IAAI,GAAGH,KAAK,GAAG,CAAf;AACH,OAFD,MAEO;AACHG,QAAAA,IAAI,GAAGH,KAAK,GAAG,CAAf;AACH;;AACD,WAAKM,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEG;AAAT,OAAd;AACH,KAP0B,EAOxB,IAPwB,CAA3B;AAQH;;AACDI,EAAAA,YAAY,CAACC,KAAD,EAAQ,CAEnB;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,KAAL,CAAWC,KADhB,CADJ;AAKH;;AA1BwC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Timer extends Component {\n    state = {\n        timer: 0,\n        backward: false\n    }\n    componentDidMount() {\n        const { timer, backward } = this.state;\n        let next;\n        this.interval = setInterval(function () {\n            if (backward) {\n                next = timer - 1;\n            } else {\n                next = timer + 1;\n            }\n            this.setState({ timer: next })\n        }, 1000);\n    }\n    onPressEnter(value) {\n\n    }\n    render() {\n        return (\n            <div>\n                {this.state.timer}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}