{"ast":null,"code":"var _jsxFileName = \"/home/simin/Projcts/react-lessons/app-timer/src/components/timerCounter.js\";\nimport React, { Component } from \"react\";\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timer: 0,\n      backward: false\n    };\n\n    this.tick = () => {\n      let {\n        timer,\n        backward\n      } = this.state;\n      let next;\n\n      if (backward == true) {\n        next = timer - 1;\n      } else {\n        next = timer + 1;\n      }\n\n      if (next === 10 || next === 0) {\n        backward = next === 10;\n        this.setState({\n          timer: next,\n          backward\n        });\n      } else {\n        this.setState({\n          timer: next\n        });\n      }\n    };\n\n    this.handleKeyPress = e => {\n      if (e.charCode === 13) {\n        this.setState({\n          timer: parseInt(e.target.value)\n        });\n      }\n\n      console.log(this.state.timer);\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onKeyPress: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.timer));\n  }\n\n}","map":{"version":3,"sources":["/home/simin/Projcts/react-lessons/app-timer/src/components/timerCounter.js"],"names":["React","Component","Timer","state","timer","backward","tick","next","setState","handleKeyPress","e","charCode","parseInt","target","value","console","log","componentDidMount","interval","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADiC;;AAAA,SAOzCC,IAPyC,GAOlC,MAAM;AACT,UAAI;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKF,KAA/B;AACA,UAAII,IAAJ;;AACA,UAAIF,QAAQ,IAAI,IAAhB,EAAsB;AAClBE,QAAAA,IAAI,GAAGH,KAAK,GAAG,CAAf;AACH,OAFD,MAEO;AACHG,QAAAA,IAAI,GAAGH,KAAK,GAAG,CAAf;AACH;;AACD,UAAIG,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,CAA5B,EAA+B;AAC3BF,QAAAA,QAAQ,GAAGE,IAAI,KAAK,EAApB;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEG,IAAT;AAAeF,UAAAA;AAAf,SAAd;AACH,OAHD,MAGO;AACH,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEG;AAAT,SAAd;AACH;AACJ,KArBwC;;AAAA,SA8BzCE,cA9ByC,GA8BvBC,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACC,QAAF,KAAe,EAAnB,EAAuB;AACnB,aAAKH,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAACQ,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV;AADJ,SAAd;AAGH;;AAGDC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,KAAvB;AAEH,KAxCwC;AAAA;;AAyBzCa,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,KAAKb,IAAN,EAAY,IAAZ,CAA3B;AAEH;;AAiBDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,UAAU,EAAE,KAAKX,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKN,KAAL,CAAWC,KAApB,CAHJ,CADJ;AAOH;;AArDwC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Timer extends Component {\n    state = {\n        timer: 0,\n        backward: false,\n       \n\n    }\n    tick = () => {\n        let { timer, backward } = this.state;\n        let next;\n        if (backward == true) {\n            next = timer - 1;\n        } else {\n            next = timer + 1;\n        }\n        if (next === 10 || next === 0) {\n            backward = next === 10;\n            this.setState({ timer: next, backward })\n        } else {\n            this.setState({ timer: next })\n        }\n    }\n\n\n\n    componentDidMount() {\n        this.interval = setInterval(this.tick, 1000);\n\n    }\n\n    handleKeyPress = (e) => {\n        if (e.charCode === 13) {\n            this.setState({ \n                timer:parseInt(e.target.value )\n            })\n        }\n\n        \n        console.log(this.state.timer);\n\n    }\n\n \n\n\n    render() {\n        return (\n            <div>\n                <input onKeyPress={this.handleKeyPress}    />\n                <br />\n                <strong>{this.state.timer}</strong>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}